#!/bin/bash


source "${ABS_PATH}/handle_errors"
source "${ABS_PATH}/colors"

JUDGECLASS=$1; shift
VERBOSE=false; [[ $1 == "true" ]] && VERBOSE=true; shift
TOPIC=$1; shift

# function check_file {
#     if [ `wc -l < $1` -eq 0 ]; then
#             $VERBOSE && e_secondary "Error FILE $1 EQUAL TO ZERO"
#             break;
#     fi
# }

pushd $TOPIC

$VERBOSE && e_success "Starting seed selection..."


cat ../judgement/qrels.$JUDGECLASS.list \
    | grep "$TOPIC " \
    | cut -d' ' -f3 \
    | sort > goldendb.$TOPIC



$VERBOSE && e_primary "Creating goldendb.$TOPIC with size `wc -l < goldendb.$TOPIC`"


echo "goldendb.$TOPIC  `wc -l goldendb.$TOPIC`"

export discretize=0
#loop over the ranking
roundSize=30
startActive=1
cat $TOPIC.synthetic.seed.svd  > seed_ssarp_labels.$TOPIC
i=0
for i in $(seq -f "%02g" 999); do
   step=$((10#$i+1))
   begin=$(($((10#$i -1))*roundSize +1))
   end=$(($((10#$i -1))*roundSize+roundSize))
   
   
   sed -n "${begin},${end}p" ../Corpus/"SeedRanking"$TOPIC > sub_new$i.$TOPIC
   
   echo "sub_new$i.$TOPIC  $begin $end `wc -l sub_new$i.$TOPIC`"
   
   #check_file sub_new$i.$TOPIC
   #cat ranking/ranking`echo $TOPIC`.txt> top_small
   #head -n 10 goldendb.$TOPIC.$TOPIC
   
   $VERBOSE && e_success "Relevants in the seed `cat sub_new$i.$TOPIC | sort | join - goldendb.$TOPIC | wc -l `" 
   
   round=$step
   source ../active_learning $CORPUS `echo $VERBOSE` $TOPIC $round $discretize $startActive  sub_new$i.$TOPIC 3
   discretize=1
   startActive=2
   
   pos=`wc -l < x_posit.$round`
   if [ $pos -ge 1 ]
   then 
       j=$(($round+1))
       printf -v round "%02d" $j
       $VERBOSE && e_success "we found a  pos doc, next round $round"
       export round
       break;
   fi
   #i=$((10#$i+1))
done
popd
  
  
  
